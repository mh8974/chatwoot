version: '3'

services:
  chatwoot:
    image: chatwoot/chatwoot:latest
    depends_on:
      - postgres
      - redis
      - mailhog
    ports:
      - 3031:3000
    environment:
      - RAILS_ENV=production
      - NODE_ENV=production
      - RAILS_LOG_TO_STDOUT=true
      - SECRET_KEY_BASE=abcd1234
      - FRONTEND_URL=http://localhost:3031
      - ENABLE_ACCOUNT_SIGNUP=true
      - REDIS_URL=redis://redis:6379
      - POSTGRES_HOST=postgres
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=chatwoot
      - SMTP_ADDRESS=mailhog
      - SMTP_PORT=1025
      - SMTP_ENABLE_STARTTLS_AUTO=false
      - BOOTSNAP_CACHE_DIR=/tmp
      - PGVECTOR_EXTENSION=true
      - FORCE_SSL=false
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/chatwoot
    restart: always
    volumes:
      - ./:/app
    entrypoint: docker/entrypoints/rails.sh
    command: sh -c "rails db:create && rails db:migrate && bundle exec rails assets:precompile && bundle exec rails s -p 3000 -b 0.0.0.0"

  postgres:
    image: postgres:12
    restart: always
    ports:
      - '5433:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatwoot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  redis:
    image: redis:alpine
    restart: always
    command: redis-server
    volumes:
      - redisdata:/data

  mailhog:
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025



volumes:
  postgres-data:
  redisdata:
